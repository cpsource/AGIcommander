# AGIcommander Environment Variables
# Copy this file to .env and add your actual API keys and configuration

# =============================================================================
# REQUIRED SETTINGS
# =============================================================================

# Google Gemini API Key (Required)
GOOGLE_API_KEY=your_gemini_api_key_here

# =============================================================================
# OPTIONAL LLM PROVIDER API KEYS
# =============================================================================

# OpenAI API Key (Optional - for GPT models)
# OPENAI_API_KEY=your_openai_api_key_here

# Anthropic API Key (Optional - for Claude models)
# ANTHROPIC_API_KEY=your_anthropic_api_key_here

# xAI API Key (Optional - for Grok models)
# XAI_API_KEY=your_xai_api_key_here

# =============================================================================
# EXTERNAL SERVICES
# =============================================================================

# Tavily Search API Key (Optional - for web research)
# TAVILY_API_KEY=your_tavily_api_key_here

# Serper API Key (Optional - alternative web search)
# SERPER_API_KEY=your_serper_api_key_here

# GitHub Token (Optional - for repository integration)
# GITHUB_TOKEN=your_github_token_here

# HuggingFace Token (Optional - for model downloads)
# HUGGINGFACE_TOKEN=your_hf_token_here

# =============================================================================
# SYSTEM CONFIGURATION
# =============================================================================

# Logging Level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# Safety Mode (true/false) - Enable safety controls and human approval
SAFETY_MODE=true

# Development Mode (true/false) - Enable debug features
DEBUG_MODE=false

# Maximum concurrent tasks
MAX_CONCURRENT_TASKS=3

# Autonomous mode (true/false) - EXPERIMENTAL: Enable autonomous learning
AUTONOMOUS_MODE=false

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# Redis URL (for caching and sessions)
REDIS_URL=redis://localhost:6379/0

# PostgreSQL URL (for structured data)
POSTGRES_URL=postgresql://username:password@localhost:5432/agicommander

# ChromaDB URL (for vector storage)
CHROMA_URL=http://localhost:8000

# =============================================================================
# SECURITY SETTINGS
# =============================================================================

# Secret key for session management
SECRET_KEY=your-secret-key-here-change-this-in-production

# JWT Secret (if using JWT authentication)
# JWT_SECRET=your-jwt-secret-here

# Encryption key for sensitive data
# ENCRYPTION_KEY=your-32-character-encryption-key

# =============================================================================
# PERFORMANCE TUNING
# =============================================================================

# LLM Request timeout (seconds)
LLM_TIMEOUT=60

# Maximum tokens per request
MAX_TOKENS=8192

# Temperature for AI responses (0.0 to 1.0)
DEFAULT_TEMPERATURE=0.1

# Rate limiting
API_CALLS_PER_MINUTE=60
FILE_OPERATIONS_PER_MINUTE=100

# =============================================================================
# MONITORING AND OBSERVABILITY
# =============================================================================

# Enable metrics collection
ENABLE_METRICS=true

# Prometheus metrics port
PROMETHEUS_PORT=9090

# Sentry DSN (for error tracking)
# SENTRY_DSN=your_sentry_dsn_here

# DataDog API Key (for monitoring)
# DATADOG_API_KEY=your_datadog_api_key_here

# =============================================================================
# DEVELOPMENT SETTINGS
# =============================================================================

# Enable development tools
DEV_TOOLS=false

# Mock external services (useful for testing)
MOCK_EXTERNAL_APIS=false

# Save intermediate results for debugging
SAVE_INTERMEDIATE_RESULTS=true

# Verbose logging for development
VERBOSE_LOGGING=false

# =============================================================================
# DOCKER-SPECIFIC SETTINGS
# =============================================================================

# Docker network name
DOCKER_NETWORK=agicommander-network

# Container resource limits
MEMORY_LIMIT=2g
CPU_LIMIT=1.0

# =============================================================================
# WORKSPACE SETTINGS
# =============================================================================

# Default workspace directory
WORKSPACE_DIR=./workspace

# Maximum file size for processing (bytes)
MAX_FILE_SIZE=10485760

# Excluded directories (comma-separated)
EXCLUDED_DIRS=__pycache__,.git,node_modules,.env,venv,.venv

# Allowed file extensions (comma-separated)
ALLOWED_EXTENSIONS=py,js,ts,html,css,json,yaml,yml,md,txt

# =============================================================================
# BACKUP AND RECOVERY
# =============================================================================

# Enable automatic backups
ENABLE_BACKUPS=true

# Backup retention (days)
BACKUP_RETENTION_DAYS=30

# Backup directory
BACKUP_DIR=./backups

# =============================================================================
# ADVANCED SETTINGS
# =============================================================================

# Enable experimental features
ENABLE_EXPERIMENTAL=false

# Self-improvement capabilities (VERY EXPERIMENTAL)
ENABLE_SELF_IMPROVEMENT=false

# Multi-agent collaboration
ENABLE_MULTI_AGENT=false

# Distributed processing
ENABLE_DISTRIBUTED=false

# =============================================================================
# NOTES
# =============================================================================

# 1. Copy this file to .env: cp .env.example .env
# 2. Add your actual API keys and secrets
# 3. Adjust settings based on your environment
# 4. Never commit .env to version control
# 5. Use different .env files for dev/staging/production

