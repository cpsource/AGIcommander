[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "agicommander"
version = "0.1.0"
description = "An AI-powered autonomous development assistant for project-level code understanding and modification"
readme = "README.md"
license = {text = "Dual License - See LICENSE file"}
authors = [
    {name = "Cal Page", email = "cal.page@example.com"},
]
maintainers = [
    {name = "Cal Page", email = "cal.page@example.com"},
]
keywords = [
    "ai", "artificial-intelligence", "agi", "code-generation", 
    "development-tools", "automation", "mcp", "llm", "gemini"
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Code Generators",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "License :: Other/Proprietary License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
]
requires-python = ">=3.8"
dependencies = [
    # Core LLM Integration
    "langchain-google-genai>=2.0.0",
    "langchain>=0.1.0",
    
    # Configuration and Environment
    "python-dotenv>=1.0.0",
    "pyyaml>=6.0",
    
    # Vector Database and Memory
    "chromadb>=0.4.0",
    "sentence-transformers>=2.2.0",
    
    # Web and API
    "requests>=2.31.0",
    "aiohttp>=3.8.0",
    "httpx>=0.24.0",
    
    # Data Processing
    "pandas>=2.0.0",
    "numpy>=1.24.0",
    
    # Async Support
    "asyncio",
    
    # Logging
    "structlog>=23.0.0",
    
    # AWS S3 Integration
    "boto3>=1.34.0",
    "botocore>=1.34.0",
    "mcp>=1.0.0",
]

[project.optional-dependencies]
# Development dependencies
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "isort>=5.12.0",
    "pre-commit>=3.0.0",
]

# Additional LLM providers
llm-extended = [
    "openai>=1.0.0",
    "anthropic>=0.7.0",
]

# Research and web search capabilities
research = [
    "tavily-python>=0.3.0",
    "beautifulsoup4>=4.12.0",
    "newspaper3k>=0.2.8",
]

# Database backends
databases = [
    "sqlalchemy>=2.0.0",
    "psycopg2-binary>=2.9.0",
    "redis>=4.5.0",
]

# Machine learning and advanced AI
ml = [
    "torch>=2.0.0",
    "transformers>=4.30.0",
    "huggingface-hub>=0.16.0",
    "scikit-learn>=1.3.0",
]

# Monitoring and observability
monitoring = [
    "prometheus-client>=0.16.0",
    "sentry-sdk>=1.30.0",
    "structlog>=23.0.0",
]

# Web interface and API
web = [
    "fastapi>=0.100.0",
    "uvicorn>=0.23.0",
    "jinja2>=3.1.0",
    "websockets>=11.0.0",
]

# Document processing
documents = [
    "pypdf>=3.0.0",
    "python-docx>=0.8.11",
    "openpyxl>=3.1.0",
    "mammoth>=1.6.0",
]

# AWS and cloud storage services
aws = [
    "boto3>=1.34.0",
    "botocore>=1.34.0",
    "awscli>=1.32.0",
]

# All optional dependencies
all = [
    "agicommander[dev,llm-extended,research,databases,ml,monitoring,web,documents,aws]"
]

[project.urls]
"Homepage" = "https://github.com/yourusername/agicommander"
"Bug Reports" = "https://github.com/yourusername/agicommander/issues"
"Source" = "https://github.com/yourusername/agicommander"
"Documentation" = "https://github.com/yourusername/agicommander/docs"

[project.scripts]
agicommander = "core.orchestrator:main"
agi-setup = "scripts.setup:main"
agi-test = "scripts.test:main"
# S3 MCP Server
s3-mcp-server = "servers.memory.S3.s3_mcp_server:main"

[project.entry-points."agicommander.plugins"]
# Plugin entry points for extensibility
code_server = "servers.code.commander:create_server"
memory_server = "servers.memory.vector_db:create_server"
research_server = "servers.learning.research:create_server"
# S3 Memory Server
s3_server = "servers.memory.S3.s3_mcp_server:S3MCPServer"

[tool.setuptools.packages.find]
where = ["."]
include = ["core*", "llm_adapters*", "servers*", "agents*"]
exclude = ["tests*", "docs*", "examples*"]

[tool.setuptools.package-data]
"*" = ["*.yaml", "*.yml", "*.json", "*.md", "*.txt"]
